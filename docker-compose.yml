services:

  barsic-web:
    container_name: barsic-web
    hostname: barsic-web
    image: sendhello/barsic3-api:${BARSIC_WEB_VERSION}
    environment:
      DEBUG: ${DEBUG}
      PROJECT_NAME: ${PROJECT_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # AppSettings
      MSSQL_DRIVER_TYPE: ${MSSQL_DRIVER_TYPE}
      MSSQL_SERVER: ${MSSQL_SERVER}
      MSSQL_USER: ${MSSQL_USER}
      MSSQL_PWD: ${MSSQL_PWD}
      MSSQL_DATABASE1: ${MSSQL_DATABASE1}
      MSSQL_DATABASE2: ${MSSQL_DATABASE2}
      MSSQL_SERVER_RK: ${MSSQL_SERVER_RK}
      MSSQL_USER_RK: ${MSSQL_USER_RK}
      MSSQL_PWD_RK: ${MSSQL_PWD_RK}
      MSSQL_DATABASE_RK: ${MSSQL_DATABASE_RK}
      LOCAL_FOLDER: ${LOCAL_FOLDER}
      REPORT_PATH: ${REPORT_PATH}
      YADISK_TOKEN: ${YADISK_TOKEN}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_CHANEL_ID: ${TELEGRAM_CHANEL_ID}
      REPORT_NAMES: ${REPORT_NAMES}
      # Google Docs Settings
      GOOGLE_DOC_VERSION: ${GOOGLE_DOC_VERSION}
      GOOGLE_ALL_READ: ${GOOGLE_ALL_READ}
      GOOGLE_READER_LIST: ${GOOGLE_READER_LIST}
      GOOGLE_WRITER_LIST: ${GOOGLE_WRITER_LIST}
      GOOGLE_API_PROJECT_ID: ${GOOGLE_API_PROJECT_ID}
      GOOGLE_API_PRIVATE_KEY_ID: ${GOOGLE_API_PRIVATE_KEY_ID}
      GOOGLE_API_PRIVATE_KEY: ${GOOGLE_API_PRIVATE_KEY}
      GOOGLE_API_CLIENT_EMAIL: ${GOOGLE_API_CLIENT_EMAIL}
      GOOGLE_API_CLIENT_ID: ${GOOGLE_API_CLIENT_ID}
      GOOGLE_API_CLIENT_X509_CERT_URL: ${GOOGLE_API_CLIENT_X509_CERT_URL}
    networks:
      network:
      vlan:
        ipv4_address: 192.168.1.232
    expose:
      - "8000"
    volumes:
      - ./reports:/opt/app/reports/
    depends_on:
      - redis
      - postgres
    restart: always

  barsic-bot:
    container_name: barsic-bot
    hostname: barsic-bot
    image: sendhello/barsic-bot:${BARSIC_BOT_VERSION}
    environment:
      DEBUG: ${DEBUG}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CACHE_TIME: ${CACHE_TIME}
      PROJECT_NAME: ${PROJECT_NAME}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # AppSettings
      BOT_TELEGRAM_TOKEN: ${BOT_TELEGRAM_TOKEN}
      BARSIC_WEB_HOST: ${BARSIC_WEB_HOST}
      BARSIC_WEB_PORT: ${BARSIC_WEB_PORT}
      USER_PASSWORD: ${USER_PASSWORD}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      WRITE_PASSWORD_LIMIT_PER_DAY: ${WRITE_PASSWORD_LIMIT_PER_DAY}
      CHECKBOX_SIZE: ${CHECKBOX_SIZE}
      PURCHASED_GOODS_REPORT_POSITIONS: ${PURCHASED_GOODS_REPORT_POSITIONS}
    networks:
      network:
    depends_on:
      - redis
      - postgres
      - barsic-web
    restart: always

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:15.2
    networks:
      network:
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - barsic_pg:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    container_name: redis
    hostname: redis
    image: redis:7.2-rc1
    environment:
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD}
    volumes:
      - barsic_redis:/data
    expose:
      - "6379"
    networks:
      network:
    restart: always

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:1.25
    volumes:
      - ./src/nginx.conf:/etc/nginx/nginx.conf
      - ./src/configs:/etc/nginx/conf.d
    depends_on:
      - barsic-web
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      network:
    restart: always

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      --interval 300
      --cleanup
      --label-enable
      --scope barsic
    restart: always

volumes:
  barsic_pg:
  barsic_redis:

networks:
  network:
  vlan:
    driver: ipvlan
    driver_opts:
      ipvlan_mode: l2
      parent: eth0
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.2"